jobs:
  include:
    - path: cider-ci/job-deploy-to-containers.yml
    - path: cider-ci/jobs.yml
      submodule: [deploy]

  integration-tests-preflight-check:
    name: Integration Tests Preflight Check
    description: |
      This jobs checks with a dummy execution if all scripts are working
      together.
    run_when: &DEFAULT_TRIGGERS
      any branch matches:
        type: branch
        include_match: ^.+$
    context:
      include: 
        - cider-ci/context-components/integration-tests.yml
      tasks: 
        dummy: 
          scripts:
            test:
              body: "echo '✔︎ just a no-op dummy' ; exit 0"



  build:
    depends_on: &BUILD_DEPS
      webapp precompilation is done: { submodule: [webapp], job_key: precompilation, type: job, states: [passed] }
      api uberjar has passed: { submodule: [api], job_key: build-uberjar, type: job, states: [passed] }
    run_when:
      <<: *DEFAULT_TRIGGERS
      <<: *BUILD_DEPS
    context:
      include:
        - path: cider-ci/contexts/build_archive.yml
          submodule: [deploy]

  integration-tests-plain:
    name: Integration Tests Plain
    depends_on: &INT_DEPS
      integration-tests-preflight-check: 
        job_key: integration-tests-preflight-check 
        type: job 
        states: [passed] 
    run_when: *INT_DEPS
    context:
      include: 
        - cider-ci/context-components/integration-tests.yml
      tasks:
        include:
          - submodule: [integration-tests]
            path: cider-ci/generators/plain_features.yml

  integration-tests-release-info:
    name: Integration Tests Release Info
    depends_on: &INT_DEPS
      integration-tests-preflight-check: 
        job_key: integration-tests-preflight-check 
        type: job 
        states: [passed] 
    run_when: *INT_DEPS
    context:
      include: 
        - cider-ci/context-components/integration-tests.yml
      task_defaults:
        include: [cider-ci/task-components/set-release-info.yml]
      tasks:
        include:
          - submodule: [integration-tests]
            path: cider-ci/generators/release_info_features.yml

  integration-tests-cors_disabled:
    name: Integration Tests cors_disabled
    depends_on: &INT_DEPS
      integration-tests-preflight-check: 
        job_key: integration-tests-preflight-check 
        type: job 
        states: [passed] 
    run_when: *INT_DEPS
    context:
      include: 
        - cider-ci/context-components/integration-tests.yml
      task_defaults:
        include: [cider-ci/task-components/disable-cors.yml]
      tasks:
        include:
          - submodule: [integration-tests]
            path: cider-ci/generators/cors_disabled_features.yml

  integration-tests:
    name: Integration Tests Aggregator
    depends_on: &REAL_INT_TESTS
      plain: {job_key: integration-tests-plain, type: job, states: [passed]}
      release-info: {job_key: integration-tests-release-info, type: job, states: [passed]}
      cors-disabled: {job_key: integration-tests-cors_disabled, type: job, states: [passed]}
    run_when: *REAL_INT_TESTS
    context:
      task: "echo '✔︎ All Integration Tests passed' ; exit 0"

  lint:
    name: "Linting"
    description: |
      Code checks: static checks and metrics: complexity, duplication, and format,
      also other consistency checks.
    priority: 3
    run_when: *DEFAULT_TRIGGERS
    context:
      task_defaults:
        environment_variables:
          DATALAYER_DIR: '{{CIDER_CI_WORKING_DIR}}/api/datalayer'
          GIT_LINEAR_HISTORY_CHECK_START_SHA: 8e454e2e5a333fc4cf84db5386f465252b751acd
      contexts:
        include:
          - path: cider-ci/context-components/lint/git-lint.yml
          - path: cider-ci/context-components/lint/git-lint.yml
            submodule: [api, datalayer]
      tasks:
        datalayer integrity:
          traits: { "nodejs": yes }
          git_options: { submodules: { include_match: ^.*$ } }
          scripts: { test: { body: cider-ci/bin/check-datalayer-integrity } }
  docs:
    name: docs
    depends_on:
      webapp precompilation is done: { submodule: [webapp], job_key: precompilation, type: job, states: [passed] }
    run_when:
      <<: *DEFAULT_TRIGGERS
      webapp precompilation is done: { submodule: [webapp], job_key: precompilation, type: job, states: [passed] }
    context:
      tasks:
        docs:
          tree_attachments:
            feature-specs:
              content_type: text/html
              include_match: ^docs\/feature-specs\.html$
          git_options:
            submodules:
              include_match: ^webapp$
          traits:
            curl: yes
          scripts:
            get-feature-specs:
              body: |
                set -exu
                WEBAPP_TREE_ID=`cd webapp && git log -n1 --format="%T" HEAD`
                mkdir -p docs
                curl --fail -v -o docs/feature-specs.html "https://ci.zhdk.ch/cider-ci/storage/tree-attachments/${WEBAPP_TREE_ID}/tmp/features.html"
                # sanity check: more than 100 Kbyte?
                test 100 -lt `du -k docs/feature-specs.html | cut -f1`

  # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
  # META JOBS (only depend on other jobs)                                           #
  # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  all-tests:
    name: "All tests"
    description: |
      This job depends on all unit jobs that need to pass.
      It is depended upon by the super-project!
      *Note that there still be more requirements for actually pushing to `origin`,
      look in job **"Good to Merge"**!*
    priority: 999 # "empty" job = high priority
    context:
      task: "echo '✔︎ All dependencies have passed' ; exit 0"
    depends_on: &ALL_TEST_DEPENDS
      lint: { job_key: lint, type: job, states: [passed] }
      integration-tests:
        { job_key: integration-tests, type: job, states: [passed] }
# container tests are currently difficult
#     test containers deploy:
#       { job_key: test-containers-deploy, type: job, states: [passed] }
      all-tests of the api:
        { job_key: all-tests, type: job, submodule: [api], states: [passed] }
      all-tests of the admin-webapp:
        {
          job_key: all-tests,
          type: job,
          submodule: [admin-webapp],
          states: [passed],
        }
      all-tests of the auth:
        { job_key: all-tests, type: job, submodule: [auth], states: [passed] }
      all-tests of the webapp:
        { job_key: all-tests, type: job, submodule: [webapp], states: [passed] }
    run_when: *ALL_TEST_DEPENDS

  # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
  # GITHUB BRANCH PROTECTION                                                        #
  # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  # NOTE: this does a recursive check over all repos AND depends on some submodules
  good-to-merge:
    name: "⚑ Good To Merge"
    description: |
      This job depends on all jobs that need to pass for "Delivery".
      It is depended upon by GitHub's branch protection (for `master`)!
    priority: 999 # "empty" job = high priority
    depends_on: &GOOD_TO_MERGE_DEPS
      all-tests: { job_key: all-tests, type: job, states: [passed] }
      good to merge of the api:
        {
          job_key: merged-to-master,
          type: job,
          submodule: [api],
          states: [passed],
        }
      good to merge of the admin-webapp:
        {
          job_key: merged-to-master,
          type: job,
          submodule: [admin-webapp],
          states: [passed],
        }
      good to merge of the auth:
        {
          job_key: merged-to-master,
          type: job,
          submodule: [auth],
          states: [passed],
      }
      good to merge of the webapp:
        {
          job_key: merged-to-master,
          type: job,
          submodule: [webapp],
          states: [passed],
        }
      good to merge of the mail:
        {
          job_key: merged-to-master,
          type: job,
          submodule: [mail],
          states: [passed],
        }
    run_when: *GOOD_TO_MERGE_DEPS
