
jobs:

  include:
    - path: cider-ci/jobs.yml
      submodule: [deploy]


  integration-tests:
    name: Integration Tests
    run_when: &DEFAULT_TRIGGERS
      any branch matches:
        type: branch
        include_match: ^.+$
    context:
      include:
        - path: cider-ci/integration-tests.yml
          submodule: [integration-tests]

  lint:
    name: "Linting"
    description: |
      Code checks: static checks and metrics: complexity, duplication, and format,
      also other consistency checks.
    priority: 3
    run_when: *DEFAULT_TRIGGERS
    context:
      tasks:
        datalayer integrity:
          traits: {"nodejs 4": yes}
          git_options: { submodules: { include_match: ^.*$ } }
          scripts: { test: { body: cider-ci/bin/check-datalayer-integrity } }


  'build':
    name: Build the deployment archive
    run_when: *DEFAULT_TRIGGERS
    context:
      tasks:
        docs:
          tree_attachments:
            feature-specs:
              content_type: text/html
              include_match: ^docs\/feature-specs\.html$
          git_options:
            submodules:
              include_match: ^webapp$
          traits:
            curl: yes
          scripts:
            get-feature-specs:
              body: |
                set -exu
                WEBAPP_TREE_ID=`cd webapp && git log -n1 --format="%T" HEAD`
                mkdir -p docs
                curl --fail -v -o docs/feature-specs.html "https://ci.zhdk.ch/cider-ci/storage/tree-attachments/${WEBAPP_TREE_ID}/tmp/features.html"
                # sanity check: more than 100 Kbyte?
                test 100 -lt `du -k docs/feature-specs.html | cut -f1`


  test-container-deploy:
    name: Test Deploy to a Container
    run_when:
      'build passed':
        type: job
        job_key: build
        states: [passed]
    depends_on:
      build: { type: job, job_key: build, states: [passed]}
    context:
      include:
        - path: container-test/cider-ci/context.yml
          submodule: [deploy]

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# META JOBS (only depend on other jobs)                                           #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  all-tests:
    name: "All tests"
    description: |
      This job depends on all unit jobs that need to pass.
      It is depended upon by the super-project!
      *Note that there still be more requirements for actually pushing to `origin`,
      look in job **"Good to Merge"**!*
    priority: 999 # "empty" job = high priority
    context:
      task: "echo '✔︎ All dependencies have passed' ; exit 0"
    depends_on: &ALL_TEST_DEPENDS
      lint: {job_key: lint, type: job, states: [passed]}
      integration-tests: {job_key: integration-tests, type: job, states: [passed]}
      test container deploy: {job_key: test-container-deploy, type: job, states: [passed]}
      all-tests of the api: {job_key: all-tests, type: job, submodule: [api], states: [passed]}
      all-tests of the admin-webapp: {job_key: all-tests, type: job, submodule: [admin-webapp], states: [passed]}
      all-tests of the webapp: {job_key: all-tests, type: job, submodule: [webapp], states: [passed]}
    run_when: *ALL_TEST_DEPENDS

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# GITHUB BRANCH PROTECTION                                                        #
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

  # NOTE: this does a recursive check over all repos AND depends on some submodules
  good-to-merge:
    name: "⚑ Good To Merge"
    description: |
      This job depends on all jobs that need to pass for "Delivery".
      It is depended upon by GitHub's branch protection (for `master`)!
    priority: 999 # "empty" job = high priority
    depends_on:
      all-tests:  {job_key: all-tests,    type: job, states: [passed]}
      good to merge of the api: {job_key: good-to-merge, type: job, submodule: [api], states: [passed]}
      good to merge of the admin-webapp: {job_key: good-to-merge, type: job, submodule: [admin-webapp], states: [passed]}
      good to merge of the webapp: {job_key: good-to-merge, type: job, submodule: [webapp], states: [passed]}
    context:
      task_defaults:
        environment_variables:
          GIT_LINEAR_HISTORY_CHECK_START_SHA: 8e454e2e5a333fc4cf84db5386f465252b751acd
      contexts:
        include:
          - path: cider-ci/context-components/lint/git-lint.yml
            submodule: [api, datalayer]
        "Merge Checks":
          include:
            - path: cider-ci/context-components/merge-checks.yml
              submodule: [api, datalayer]
